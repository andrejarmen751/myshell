#https://docs.docker.com/build/ci/github-actions/attestations/#sbom
# https://github.com/docker/build-push-action

name: Docker Build, Push, and SBOM

on:
  push:
    branches:
      - master  # Triggered when changes are pushed to the 'master' branch (adjust if you use a different branch)
    paths:
      - 'modules/docker/**'  # Triggered when any file under the 'modules/docker/' directory is modified

jobs:
  get_modified_dirs:
    runs-on: ubuntu-latest
    outputs:
      #modified_dirs: ${{ steps.modified_dirs.outputs.MODIFIED_DIRS }}  # Set the output for modified dirs
      modified_dirs: ${{ env.MODIFIED_DIRS }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2  # Fetch two commits to enable comparison (previous and current)

      # Step: Get the directories that have been modified
      - name: Get modified directories
        id: modified_dirs
        run: |
          bash .github/workflows/scripts/get_modified_dirs.sh ${{ github.event.before }}

  build_mysql5:
    needs: get_modified_dirs
    if: contains(needs.get_modified_dirs.outputs.modified_dirs, 'modules/docker/mysql5')  # Trigger only if mysql5 is modified
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Ensure the code is checked out

      # Docker login step
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Ensure this secret is set
          password: ${{ secrets.DOCKER_PASSWORD }}  # Ensure this secret is set

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2  # Set up Docker Buildx for advanced building

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/mysql5

      - name: Build and Push Docker image with SBOM and Provenance
        uses: docker/build-push-action@v6
        with:
          context: modules/docker/mysql5  # Path to the directory with the Dockerfile
          file: modules/docker/mysql5/Docker/dockerfile  # Path to the Dockerfile
          push: true  # Push the image to Docker Hub
          tags: ${{ secrets.DOCKER_USERNAME }}/mysql5:latest  # Tag for the Docker image
          build-args: |
            DOCKER_REGISTRY_CACHE=${{ vars.DOCKER_REGISTRY_CACHE }}
            IMAGE_MYSQL5=${{ vars.IMAGE_MYSQL5 }}
          sbom: true  # Enable SBOM generation
          provenance: mode=max  # Enable maximum provenance attestation (this will include signing)

  build_mysql8:
    needs: get_modified_dirs
    if: contains(needs.get_modified_dirs.outputs.modified_dirs, 'modules/docker/mysql8')  # Trigger only if mysql8 is modified
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Ensure the code is checked out

      # Docker login step
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Ensure this secret is set
          password: ${{ secrets.DOCKER_PASSWORD }}  # Ensure this secret is set

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2  # Set up Docker Buildx for advanced building

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/mysql8

      - name: Build and Push Docker image with SBOM and Provenance
        uses: docker/build-push-action@v6
        with:
          context: modules/docker/mysql8  # Path to the directory with the Dockerfile
          file: modules/docker/mysql8/Docker/dockerfile  # Path to the Dockerfile
          push: true  # Push the image to Docker Hub
          tags: ${{ secrets.DOCKER_USERNAME }}/mysql8:latest  # Tag for the Docker image
          build-args: |
            DOCKER_REGISTRY_CACHE=${{ vars.DOCKER_REGISTRY_CACHE }}
            IMAGE_MYSQL8=${{ vars.IMAGE_MYSQL8 }}
          sbom: true  # Enable SBOM generation
          provenance: mode=max  # Enable maximum provenance attestation (this will include signing)

  build_mongodb:
    needs: get_modified_dirs
    if: contains(needs.get_modified_dirs.outputs.modified_dirs, 'modules/docker/mongodb')  # Trigger only if mongodb is modified
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Ensure the code is checked out

      # Docker login step
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Ensure this secret is set
          password: ${{ secrets.DOCKER_PASSWORD }}  # Ensure this secret is set

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2  # Set up Docker Buildx for advanced building

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/mongodb

      - name: Build and Push Docker image with SBOM and Provenance
        uses: docker/build-push-action@v6
        with:
          context: modules/docker/mongodb  # Path to the directory with the Dockerfile
          file: modules/docker/mongodb/Docker/dockerfile  # Path to the Dockerfile
          push: true  # Push the image to Docker Hub
          tags: ${{ secrets.DOCKER_USERNAME }}/mongodb:latest  # Tag for the Docker image
          build-args: |
            DOCKER_REGISTRY_CACHE=${{ vars.DOCKER_REGISTRY_CACHE }}
            IMAGE_OPENSUSELEAP=${{ vars.IMAGE_OPENSUSELEAP }}
          sbom: true  # Enable SBOM generation
          provenance: mode=max  # Enable maximum provenance attestation (this will include signing)